# .github/workflows/deploy.yml

name: Deploy to Staging

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

            - name: Deploy to server
              env:
                  # Make the repository name available as an environment variable in the run step
                  REPO: ${{ github.repository }}
              run: |
                  # Add the server's host key using the secret
                  ssh-keyscan -H ${{ secrets.STAGING_SERVER_IP }} >> ~/.ssh/known_hosts

                  # SSH into the server using the secret and run the deployment script
                  ssh deployer@${{ secrets.STAGING_SERVER_IP }} << 'EOF'
                    # Navigate to the application directory
                    cd /var/www/biocbot-staging

                    # Check if this is the first deployment (is the .git directory present?)
                    if [ -d ".git" ]; then
                      # If it is, pull the latest code
                      echo "Git repository found. Pulling latest changes..."
                      git pull origin main
                    else
                      # If not, this is the first deploy. Clone the repo using SSH.
                      # The $REPO environment variable is passed from the `env` block above.
                      echo "No git repository found. Cloning repository for initial deployment..."
                      git clone "git@github.com:${REPO}.git" .
                    fi

                    # Install/update npm dependencies
                    echo "Installing dependencies..."
                    npm install --production

                    # Restart the application service
                    echo "Restarting application service..."
                    sudo systemctl restart biocbot-staging
                  EOF
