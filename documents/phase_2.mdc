# Phase 2 – Student Chat MVP

> Goal: A student logs in, asks a question, gets an answer generated through RAG that cites course materials. Includes flagging bad answers.

## Checklist

### Auth Shell
- [ ] **1.1 Mock SAML Flow**
    - [ ] Plug in mock SAML flow using UBC test IdP
    - [ ] Store session in MongoDB
    - [ ] Issue JWT to frontend after login

### Chat Service
- [ ] **2.1 Chat Endpoint**
    - [ ] Create POST `/chat` endpoint accepting `{message, mode}`
- [ ] **2.2 Retrieve Chunks**
    - [ ] Use toolkit-rag retrieve to get relevant chunks
- [ ] **2.3 Build Context Window**
    - [ ] Build context window with citations for LLM
- [ ] **2.4 Generate Answer**
    - [ ] Call toolkit-rag generate via LLM module (llama3-8B or local)
    - [ ] Return answer with citations

### Mode Toggle Logic
- [ ] **3.1 Calibration Quiz Stub**
    - [ ] Implement multiple choice quiz scored locally
- [ ] **3.2 Mode Selection**
    - [ ] If score < threshold, set mode to protégé; else, tutor
    - [ ] Store chosen mode in session

### Flagging Pipeline
- [ ] **4.1 Add Flag UI**
    - [ ] Add three-dot menu on message bubble for "Report answer"
- [ ] **4.2 Flag Endpoint**
    - [ ] Create POST `/flag` endpoint with comment
    - [ ] Store flag in MongoDB flags collection
- [ ] **4.3 User Feedback**
    - [ ] Return toast "Thank you for flagging" on report

### Rate Limiter & Profanity Guard
- [ ] **5.1 Rate Limiter**
    - [ ] Implement per-user 20 req / 5 min Redis bucket
- [ ] **5.2 Profanity Filter**
    - [ ] Use toolkit-agent profanity filter on incoming student text
- [ ] **5.3 Violation Handling**
    - [ ] On first violation, return warning
    - [ ] On second, insert instructor flag

### Basic Student UI
- [ ] **6.1 ChatScreen Component**
    - [ ] Display message list, input box, and mode toggle
- [ ] **6.2 Citation Footnotes**
    - [ ] Display citation footnotes linking to source filename and page
- [ ] **6.3 Persistent Storage**
    - [ ] Store chat history in MongoDB

### Metrics and Logging
- [ ] **7.1 Middleware Logging**
    - [ ] Log latency, prompt tokens, completion tokens
- [ ] **7.2 Analytics Roll-up**
    - [ ] Daily job writes summary doc to Mongo analytics

